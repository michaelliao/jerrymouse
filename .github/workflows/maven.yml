# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'
    - name: Find Maven projects and build
      run: |
        find . -type f -name 'pom.xml' -not -path '*/target/*' | while read -r pom_file; do
          echo "========================================================================="
          echo "==> Building Maven project in: $(dirname "$pom_file")"
          echo "========================================================================="
          mvn -B -f "$pom_file" clean package
        done
    - name: Setup Env
      run: |
        echo "RELEASE_AT=`echo ${{ github.event.head_commit.timestamp }} | sed 's/[:+]/-/g' | cut -c1-19`" >> "$GITHUB_ENV"
    - name: Release Zip
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: server/target/jerrymouse-server-1.0.0.jar
        tag: ${{ env.RELEASE_AT }}
        release_name: jerrymouse-${{ env.RELEASE_AT }}
        body: Jerrymouse Server Release
        overwrite: true
